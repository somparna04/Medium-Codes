# Notebook 1: Core Distributions
# Author: Somparna 
# This notebook visualizes the main continuous and discrete probability distributions.

import numpy as np
import matplotlib.pyplot as plt
from scipy.stats import (uniform, norm, lognorm, t,cauchy, chi2, f, expon, gamma, beta, weibull_min,
                         bernoulli, binom, geom, nbinom, poisson, hypergeom, randint, multinomial,dirichlet)

# ---------------------------
# Continuous Distributions
# ---------------------------

# 1. Uniform (continuous)
x = np.linspace(-2, 5, 500)
plt.figure(); plt.plot(x, uniform.pdf(x, 0, 1), 'b-', lw=2, label='Uniform(0,1)')
plt.plot(x, uniform.pdf(x, 1, 3), 'r--', lw=2, label='Uniform(1,4)')
plt.title("Continuous Uniform"); plt.legend(); plt.show()

# 2. Exponential
x = np.linspace(0, 10, 500)
plt.figure(); plt.plot(x, expon.pdf(x, scale=1), 'b-', lw=2, label='λ=1')
plt.plot(x, expon.pdf(x, scale=0.5), 'r--', lw=2, label='λ=2')
plt.title("Exponential"); plt.legend(); plt.show()

# 3. Normal
x = np.linspace(-4, 4, 500)
plt.figure(); plt.plot(x, norm.pdf(x, 0, 1), 'b-', lw=2, label='N(0,1)')
plt.plot(x, norm.pdf(x, 1, 0.5), 'r--', lw=2, label='N(1,0.5²)')
plt.title("Normal"); plt.legend(); plt.show()

# 4. Gamma
x = np.linspace(0, 20, 500)
plt.figure(); plt.plot(x, gamma.pdf(x, 2, scale=2), 'b-', lw=2, label='α=2,β=0.5')
plt.plot(x, gamma.pdf(x, 5, scale=1), 'r--', lw=2, label='α=5,β=1')
plt.title("Gamma"); plt.legend(); plt.show()

# 5. Chi-Square
x = np.linspace(0, 20, 500)
plt.figure(); plt.plot(x, chi2.pdf(x, 2), 'b-', lw=2, label='df=2')
plt.plot(x, chi2.pdf(x, 10), 'r--', lw=2, label='df=10')
plt.title("Chi-Square"); plt.legend(); plt.show()

# 6. Weibull
x = np.linspace(0, 5, 500)
plt.figure(); plt.plot(x, weibull_min.pdf(x, 0.5), 'b-', lw=2, label='k=0.5')
plt.plot(x, weibull_min.pdf(x, 1), 'r--', lw=2, label='k=1 (Exp)')
plt.plot(x, weibull_min.pdf(x, 2), 'g-.', lw=2, label='k=2')
plt.title("Weibull"); plt.legend(); plt.show()

# 7. Lognormal
x = np.linspace(0, 10, 500)
plt.figure(); plt.plot(x, lognorm.pdf(x, 0.5, scale=np.exp(0)), 'b-', lw=2, label='Lognormal(μ=0,σ=0.5)')
plt.plot(x, lognorm.pdf(x, 1.0, scale=np.exp(1)), 'r--', lw=2, label='Lognormal(μ=1,σ=1)')
plt.title("Lognormal"); plt.legend(); plt.show()

# 8. Student’s t
x = np.linspace(-5, 5, 500)
plt.figure(); plt.plot(x, t.pdf(x, 3), 'r-', lw=2, label='t(df=3)')
plt.plot(x, t.pdf(x, 30), 'g--', lw=2, label='t(df=30)')
plt.plot(x, norm.pdf(x, 0, 1), 'b-', lw=2, label='N(0,1)')
plt.title("Student’s t"); plt.legend(); plt.show()

# 9. Cauchy vs Normal
x = np.linspace(-10, 10, 500)
plt.figure()
plt.plot(x, cauchy.pdf(x, loc=0, scale=1), 'r-', lw=2, label='Cauchy(0,1)')
plt.plot(x, cauchy.pdf(x, loc=0, scale=2), 'g--', lw=2, label='Cauchy(0,2)')
plt.plot(x, norm.pdf(x, 0, 1), 'b-', lw=2, label='N(0,1)')
plt.title("Cauchy")
plt.legend()
plt.show()

# 10. Beta
x = np.linspace(0, 1, 500)
plt.figure(); plt.plot(x, beta.pdf(x, 0.5, 0.5), 'g-', lw=2, label='Beta(0.5,0.5)')
plt.plot(x, beta.pdf(x, 2, 5), 'r--', lw=2, label='Beta(2,5)')
plt.plot(x, beta.pdf(x, 5, 2), 'b-.', lw=2, label='Beta(5,2)')
plt.title("Beta"); plt.legend(); plt.show()

# 11. Dirichlet
alpha = [2, 3, 5]
samples = dirichlet.rvs(alpha, size=5000)

plt.figure(figsize=(6,6))
plt.scatter(samples[:,0], samples[:,1], alpha=0.3, s=10, color="teal")
plt.title("Dirichlet Distribution Samples (α = [2,3,5])")
plt.xlabel("p1"); plt.ylabel("p2"); plt.grid(alpha=0.3); plt.show()

# 12. F
x = np.linspace(0, 5, 500)
plt.figure(); plt.plot(x, f.pdf(x, 5, 10), 'b-', lw=2, label='F(5,10)')
plt.plot(x, f.pdf(x, 10, 20), 'r--', lw=2, label='F(10,20)')
plt.title("F"); plt.legend(); plt.show()

# ---------------------------
# Discrete Distributions
# ---------------------------

# 1. Bernoulli
p=0.3; x=[0,1]
plt.figure(); plt.stem(x, bernoulli.pmf(x,p), basefmt=" "); plt.title("Bernoulli"); plt.show()

# 2. Binomial
n,p=10,0.5; x=np.arange(0,n+1)
plt.figure(); plt.stem(x, binom.pmf(x,n,p), basefmt=" "); plt.title("Binomial"); plt.show()

# 3. Geometric
p=0.3; x=np.arange(1,15)
plt.figure(); plt.stem(x, geom.pmf(x,p), basefmt=" "); plt.title("Geometric"); plt.show()

# 4. Negative Binomial
r,p=5,0.4; x=np.arange(0,30)
plt.figure(); plt.stem(x, nbinom.pmf(x,r,p), basefmt=" "); plt.title("Negative Binomial"); plt.show()

# 5. Poisson
lam=4; x=np.arange(0,15)
plt.figure(); plt.stem(x, poisson.pmf(x,lam), basefmt=" "); plt.title("Poisson"); plt.show()

# 6. Hypergeometric
N,K,n=50,10,12; x=np.arange(max(0,n-(N-K)), min(n,K)+1)
plt.figure(); plt.stem(x, hypergeom.pmf(x,N,K,n), basefmt=" "); plt.title("Hypergeometric"); plt.show()

# 7. Discrete Uniform
low,high=1,7; x=np.arange(low,high)
plt.figure(); plt.stem(x, randint.pmf(x,low,high), basefmt=" "); plt.title("Discrete Uniform"); plt.show()

# 8. Multinomial (small n, 3 categories)
from mpl_toolkits.mplot3d import Axes3D
n=5; p=[0.5,0.3,0.2]
outcomes=[]; probs=[]
for x1 in range(n+1):
    for x2 in range(n+1-x1):
        x3=n-x1-x2
        outcomes.append((x1,x2,x3))
        probs.append(multinomial.pmf([x1,x2,x3],n,p))
x1,x2,x3=zip(*outcomes)
fig=plt.figure(); ax=fig.add_subplot(111,projection='3d')
sc=ax.scatter(x1,x2,x3,c=probs,cmap='viridis',s=80)
fig.colorbar(sc,label="Probability")
ax.set_title("Multinomial(n=5,p=[0.5,0.3,0.2])"); plt.show()
